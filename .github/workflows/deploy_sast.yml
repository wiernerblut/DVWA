name: Deploy to EC2 via SSH

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    - uses: sonarsource/sonarcloud-github-action@v5
      env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
                -Dsonar.organization=wiernerblut
                -Dsonar.projectKey=wiernerblut_devsecops-demo-app
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Build Docker image
      run: |
        docker build -t devsecops-app .

    - name: Save Docker image as tar
      run: |
        docker save devsecops-app | gzip > image.tar.gz

    - name: Copy Docker image to EC2
      run: |
        sudo scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa image.tar.gz ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/

    - name: Load Docker image and run it on EC2
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          sudo docker stop devsecops-app || true
          sudo docker rm devsecops-app || true
          gunzip -c image.tar.gz | docker load
          sudo docker run -d -p 80:80 --name devsecops-app devsecops-app
        EOF
